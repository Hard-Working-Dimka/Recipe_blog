# Generated by Django 5.2 on 2025-04-28 15:41

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Аллергия')),
            ],
            options={
                'verbose_name': 'Аллергия',
                'verbose_name_plural': 'Аллергии',
            },
        ),
        migrations.CreateModel(
            name='Diet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Диета',
                'verbose_name_plural': 'Диеты',
            },
        ),
        migrations.CreateModel(
            name='FoodIntake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Приём пищи')),
            ],
            options={
                'verbose_name': 'Приём пищи',
                'verbose_name_plural': 'Приёмы пищи',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ингредиент')),
                ('quantity_of_ingredients', models.IntegerField(verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='TypeOfMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Тип меню')),
            ],
            options={
                'verbose_name': 'Тип меню',
                'verbose_name_plural': 'Типы меню',
            },
        ),
        migrations.CreateModel(
            name='TypeOfSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.IntegerField(verbose_name='Период (дней)')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Название подписки')),
            ],
            options={
                'verbose_name': 'Тип подписки',
                'verbose_name_plural': 'Типы подписок',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='users', verbose_name='Аватар')),
                ('email', models.EmailField(help_text='Введите действительный email адрес', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email адрес')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('description', models.TextField(verbose_name='Описание')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('slug', models.SlugField(verbose_name='URL-имя')),
                ('calories', models.IntegerField(verbose_name='Калории')),
                ('allergy', models.ManyToManyField(related_name='recipes', to='recepies.allergy', verbose_name='Аллергии')),
                ('diet', models.ManyToManyField(related_name='recipes', to='recepies.diet', verbose_name='Диеты')),
                ('food_intake', models.ManyToManyField(related_name='recipes', to='recepies.foodintake', verbose_name='Приёмы пищи')),
                ('ingredients', models.ManyToManyField(related_name='recipes', to='recepies.ingredient', verbose_name='Ингредиенты')),
                ('likes', models.ManyToManyField(related_name='liked_recipes', to=settings.AUTH_USER_MODEL, verbose_name='Лайки')),
                ('type_of_menu', models.ManyToManyField(related_name='recipes', to='recepies.typeofmenu', verbose_name='Типы меню')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_people', models.IntegerField(default=1, verbose_name='Количество персон')),
                ('total_price', models.IntegerField(verbose_name='Общая цена')),
                ('status', models.BooleanField(default=False, verbose_name='Статус оплаты')),
                ('duration', models.IntegerField(default=False, verbose_name='Длительность подписки')),
                ('breakfasts', models.BooleanField(default=False, verbose_name='Завтрак включён')),
                ('lunches', models.BooleanField(default=False, verbose_name='Ужин включён')),
                ('dinners', models.BooleanField(default=False, verbose_name='Ужин включён')),
                ('desserts', models.BooleanField(default=False, verbose_name='Десерт включён')),
                ('allergy', models.ManyToManyField(related_name='orders', to='recepies.allergy', verbose_name='Аллергии')),
                ('food_intake', models.ManyToManyField(related_name='orders', to='recepies.foodintake', verbose_name='Приёмы пищи')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Профиль')),
                ('type_of_menu', models.ManyToManyField(related_name='orders', to='recepies.typeofmenu', verbose_name='Типы меню')),
                ('type_of_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recepies.typeofsubscription', verbose_name='Подписка')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
    ]
