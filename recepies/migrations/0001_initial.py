# Generated by Django 5.2 on 2025-04-23 06:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Diet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FoodIntake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('quantity_of_ingredients', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.IntegerField()),
                ('price', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='')),
                ('description', models.TextField()),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField()),
                ('calories', models.IntegerField()),
                ('allergy', models.ManyToManyField(related_name='recipes', to='recepies.allergy')),
                ('diet', models.ManyToManyField(related_name='recipes', to='recepies.diet')),
                ('food_intake', models.ManyToManyField(related_name='recipes', to='recepies.foodintake')),
                ('ingredients', models.ManyToManyField(related_name='recipes', to='recepies.ingredient')),
                ('likes', models.ManyToManyField(related_name='liked_recipes', to=settings.AUTH_USER_MODEL)),
                ('type_of_menu', models.ManyToManyField(related_name='recipes', to='recepies.typeofmenu')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(upload_to='users')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_people', models.IntegerField(default=1)),
                ('total_price', models.IntegerField()),
                ('status', models.BooleanField(default=False)),
                ('allergy', models.ManyToManyField(related_name='orders', to='recepies.allergy')),
                ('food_intake', models.ManyToManyField(related_name='orders', to='recepies.foodintake')),
                ('type_of_menu', models.ManyToManyField(related_name='orders', to='recepies.typeofmenu')),
                ('type_of_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recepies.typeofsubscription')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recepies.userprofile')),
            ],
        ),
    ]
